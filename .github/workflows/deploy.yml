name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}
  
permissions:
  actions: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  # prisma:
  #   name: Prisma for Lambda
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.9.1

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 14

  #     - name: 📥 Download deps
  #       uses: bahmutov/npm-install@v1
  #       with:
  #         useLockFile: false

  #     - name: Prepare prisma client
  #       run: yarn db:pscale:generate

  #     - name: Prepare "@prisma/client" lambda layer
  #       run: ./scripts/prismaClientLambda.sh

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: lambda-prisma-client
  #         path: ./lambda-prisma-client

  deploy:
    needs: [typecheck]
    runs-on: ubuntu-latest

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: 👀 Env
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🏗 Build
        env:
          PRISMA_BINARY_TARGET: '["rhel-openssl-1.0.x"]'
        run: npm run build:lambda

      - name: 🛠 Install Arc
        run: npm i -g @architect/architect

      - name: 🚀 Staging Deploy
        if: github.ref == 'refs/heads/dev'
        run: arc deploy --staging --prune
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 🚀 Production Deploy
        if: github.ref == 'refs/heads/main'
        run: arc deploy --production --prune
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
