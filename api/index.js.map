{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "D:\\WebApp-Project\\remixionnaire\\app\\root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "D:\\WebApp-Project\\remixionnaire\\app\\routes\\dashboard.tsx", "../app/libs/validateEmail.ts", "../app/libs/useMatchesData.ts", "../app/libs/useOptionalUser.ts", "../app/libs/useUser.ts", "../app/libs/safeRedirect.ts", "D:\\WebApp-Project\\remixionnaire\\app\\routes\\dashboard\\index.tsx", "../app/models/questionnaire.server.ts", "D:\\WebApp-Project\\remixionnaire\\app\\routes\\index.tsx", "D:\\WebApp-Project\\remixionnaire\\app\\routes\\login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { NextUIProvider, globalCss } from \"@nextui-org/react\";\nimport { json } from \"@remix-run/node\";\nimport { getUser } from \"./session.server\";\n\nimport style from \"./assets/global.css\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: style }];\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remixionnaire\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\nexport default function App() {\n  globalCss({\n    html: { backgroundColor: \"$accents0 !important\" },\n    body: { backgroundColor: \"$accents0 !important\" },\n  })();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <NextUIProvider>\n          <Outlet />\n        </NextUIProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\nimport type { User } from \"~/models/user.server\";\r\nimport { getUserById } from \"~/models/user.server\";\r\n\r\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\r\n\r\nexport const sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"__session\",\r\n    httpOnly: true,\r\n    maxAge: 0,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [process.env.SESSION_SECRET],\r\n    secure: process.env.NODE_ENV === \"production\",\r\n  },\r\n});\r\n\r\nconst USER_SESSION_KEY = \"userId\";\r\n\r\nexport async function getSession(request: Request) {\r\n  const cookie = request.headers.get(\"Cookie\");\r\n  return sessionStorage.getSession(cookie);\r\n}\r\n\r\nexport async function getUserId(\r\n  request: Request\r\n): Promise<User[\"id\"] | undefined> {\r\n  const session = await getSession(request);\r\n  const userId = session.get(USER_SESSION_KEY);\r\n  return userId;\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n  if (userId === undefined) return null;\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const userId = await getUserId(request);\r\n  if (!userId) {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n  return userId;\r\n}\r\n\r\nexport async function requireUser(request: Request) {\r\n  const userId = await requireUserId(request);\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function createUserSession({\r\n  request,\r\n  userId,\r\n  remember,\r\n  redirectTo,\r\n}: {\r\n  request: Request;\r\n  userId: string;\r\n  remember: boolean;\r\n  redirectTo: string;\r\n}) {\r\n  const session = await getSession(request);\r\n  session.set(USER_SESSION_KEY, userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\r\n        maxAge: remember\r\n          ? 60 * 60 * 24 * 7 // 7 days\r\n          : undefined,\r\n      }),\r\n    },\r\n  });\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getSession(request);\r\n  return redirect(\"/\", {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n", "import type { Password, User } from \"@prisma/client\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { User } from \"@prisma/client\";\r\n\r\nexport async function getUserById(id: User[\"id\"]) {\r\n  return prisma.user.findUnique({ where: { id } });\r\n}\r\n\r\nexport async function getUserByEmail(email: User[\"email\"]) {\r\n  return prisma.user.findUnique({ where: { email } });\r\n}\r\n\r\nexport async function createUser(\r\n  email: User[\"email\"],\r\n  name: User[\"name\"],\r\n  password: string\r\n) {\r\n  const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n  return prisma.user.create({\r\n    data: {\r\n      email,\r\n      name,\r\n      password: {\r\n        create: {\r\n          hash: hashedPassword,\r\n        },\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteUserByEmail(email: User[\"email\"]) {\r\n  return prisma.user.delete({ where: { email } });\r\n}\r\n\r\nexport async function verifyLogin(\r\n  email: User[\"email\"],\r\n  password: Password[\"hash\"]\r\n) {\r\n  const userWithPassword = await prisma.user.findUnique({\r\n    where: { email },\r\n    include: {\r\n      password: true,\r\n    },\r\n  });\r\n\r\n  if (!userWithPassword || !userWithPassword.password) {\r\n    return null;\r\n  }\r\n\r\n  const isValid = await bcrypt.compare(\r\n    password,\r\n    userWithPassword.password.hash\r\n  );\r\n\r\n  if (!isValid) {\r\n    return null;\r\n  }\r\n\r\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\r\n\r\n  return userWithoutPassword;\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet prisma: PrismaClient;\r\n\r\ndeclare global {\r\n  var __db__: PrismaClient;\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\n// in production we'll have a single connection to the DB.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient();\r\n} else {\r\n  if (!global.__db__) {\r\n    global.__db__ = new PrismaClient();\r\n  }\r\n  prisma = global.__db__;\r\n  prisma.$connect();\r\n}\r\n\r\nexport { prisma };\r\n", "import type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nimport { Container, Text, User } from \"@nextui-org/react\";\r\nimport { Outlet } from \"@remix-run/react\";\r\n\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { useUser } from \"~/libs\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await requireUserId(request);\r\n  return userId;\r\n};\r\n\r\nexport default function DashboardLayout() {\r\n  const user = useUser();\r\n\r\n  const headerStyle = {\r\n    bg: \"$background\",\r\n    border: \"1px solid $border\",\r\n    maxWidth: \"100%\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid gap={0} css={headerStyle}>\r\n        <Container\r\n          sm\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          wrap=\"nowrap\"\r\n          as=\"nav\"\r\n          css={{\r\n            margin: \"auto\",\r\n            padding: \".75rem 0 .75rem 0\",\r\n          }}\r\n        >\r\n          <Container display=\"flex\" alignItems=\"center\" css={{ flex: \"1 1\" }}>\r\n            <Text h3 margin=\"0\">\r\n              Remixionnaire\r\n            </Text>\r\n          </Container>\r\n          <Container display=\"flex\" justify=\"flex-end\" css={{ flex: \"0 0\" }}>\r\n            <User\r\n              // @ts-ignore\r\n              pointer=\"true\"\r\n              src=\"https://i.pravatar.cc/150?u=a042581f4e29026704d\"\r\n              size=\"sm\"\r\n              name={user.name}\r\n              description=\"Creator\"\r\n              css={{\r\n                flexDirection: \"row-reverse\",\r\n                textAlign: \"right\",\r\n                marginLeft: \"0\",\r\n              }}\r\n            />\r\n          </Container>\r\n        </Container>\r\n        <Container sm alignItems=\"center\" display=\"flex\" wrap=\"nowrap\">\r\n          Test\r\n        </Container>\r\n      </Container>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n", "export default function validateEmail(email: unknown): email is string {\r\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\r\n}", "import { useMatches } from \"@remix-run/react\";\r\nimport { useMemo } from \"react\";\r\n\r\n/**\r\n * This base hook is used in other hooks to quickly search for specific data\r\n * across all loader data using useMatches.\r\n * @param {string} id The route id\r\n * @returns {JSON|undefined} The router data or undefined if not found\r\n */\r\nexport default function useMatchesData(\r\n  id: string\r\n): Record<string, unknown> | undefined {\r\n  const matchingRoutes = useMatches();\r\n  const route = useMemo(\r\n    () => matchingRoutes.find((route) => route.id === id),\r\n    [matchingRoutes, id]\r\n  );\r\n  return route?.data;\r\n}\r\n", "import type { User } from \"@prisma/client\";\r\nimport useMatchesData from \"./useMatchesData\";\r\n\r\nfunction isUser(user: any): user is User {\r\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\r\n}\r\n\r\nexport default function useOptionalUser(): User | undefined {\r\n  const data = useMatchesData(\"root\");\r\n  if (!data || !isUser(data.user)) {\r\n    return undefined;\r\n  }\r\n  return data.user;\r\n}", "import type { User } from \"@prisma/client\";\r\nimport useOptionalUser from \"./useOptionalUser\";\r\n\r\nexport default function useUser(): User {\r\n  const maybeUser = useOptionalUser();\r\n  if (!maybeUser) {\r\n    throw new Error(\r\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\r\n    );\r\n  }\r\n  return maybeUser;\r\n}\r\n", "const DEFAULT_REDIRECT = \"/\";\r\n\r\n/**\r\n * This should be used any time the redirect path is user-provided\r\n * (Like the query string on our login/signup pages). This avoids\r\n * open-redirect vulnerabilities.\r\n * @param {string} to The redirect destination\r\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\r\n */\r\n export default function safeRedirect(\r\n  to: FormDataEntryValue | string | null | undefined,\r\n  defaultRedirect: string = DEFAULT_REDIRECT\r\n) {\r\n  if (!to || typeof to !== \"string\") {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  return to;\r\n}", "import type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nimport { Card, Container, Grid, Row, Text } from \"@nextui-org/react\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { json } from \"@remix-run/node\";\r\n\r\nimport { getQuestionnaires } from \"~/models/questionnaire.server\";\r\nimport { getUserId } from \"~/session.server\";\r\n\r\ntype LoaderData = {\r\n  qreList: Awaited<ReturnType<typeof getQuestionnaires>>;\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = (await getUserId(request)) || \"\";\r\n  const qreList = await getQuestionnaires({ userId });\r\n  return json<LoaderData>({ qreList });\r\n};\r\n\r\nexport default function DashboardIndex() {\r\n  const data = useLoaderData() as LoaderData;\r\n  return (\r\n    <Container sm>\r\n      <Text h1>Dashboard</Text>\r\n      <Grid.Container gap={2} justify=\"flex-start\">\r\n        {data.qreList.map((qre) => (\r\n          <Grid xs={6} sm={3} key={qre.id}>\r\n            <Card hoverable clickable>\r\n              <Card.Body css={{ p: 0 }}>\r\n                <Card.Image\r\n                  objectFit=\"cover\"\r\n                  src=\"https://nextui.org/images/fruit-6.jpeg\"\r\n                  width=\"100%\"\r\n                  height={140}\r\n                  alt={qre.name}\r\n                />\r\n              </Card.Body>\r\n              {/* @ts-ignore */}\r\n              <Card.Footer justify=\"flex-start\">\r\n                <Row wrap=\"wrap\" justify=\"space-between\">\r\n                  <Text b>{qre.name}</Text>\r\n                  <Text css={{ color: \"$accents4\", fontWeight: \"$semibold\" }}>\r\n                    {qre.status}\r\n                  </Text>\r\n                </Row>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid.Container>\r\n    </Container>\r\n  );\r\n}\r\n", "import type { User, Questionnaire } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Questionnaire };\r\n\r\nexport function getQuestionnaire({\r\n  id,\r\n  userId,\r\n}: Pick<Questionnaire, \"id\"> & {\r\n  userId: User[\"id\"];\r\n}) {\r\n  return prisma.questionnaire.findFirst({\r\n    where: { id, authorId: userId },\r\n  });\r\n}\r\n\r\nexport function getQuestionnaires({ userId }: { userId: User[\"id\"] }) {\r\n  return prisma.questionnaire.findMany({\r\n    where: { authorId: userId },\r\n    orderBy: { updatedAt: \"desc\" },\r\n  });\r\n}\r\n\r\nexport function createQuestionnaire({\r\n  name,\r\n  description,\r\n  expiresAt,\r\n  userId,\r\n}: Pick<Questionnaire, \"name\" | \"description\" | \"expiresAt\"> & {\r\n  userId: User[\"id\"];\r\n}) {\r\n  return prisma.questionnaire.create({\r\n    data: {\r\n      name,\r\n      description,\r\n      expiresAt,\r\n      author: {\r\n        connect: { id: userId },\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport function deleteQuestionnaire({\r\n  id,\r\n  userId,\r\n}: Pick<Questionnaire, \"id\"> & { userId: User[\"id\"] }) {\r\n  return prisma.questionnaire.deleteMany({\r\n    where: { id, authorId: userId },\r\n  });\r\n}\r\n", "export default function Index() {\n  return <div />;\n}\n", "import type {\r\n  ActionFunction,\r\n  LoaderFunction,\r\n  MetaFunction,\r\n} from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport * as React from \"react\";\r\n\r\nimport { createUserSession, getUserId } from \"~/session.server\";\r\nimport { safeRedirect, validateEmail } from \"~/libs\";\r\nimport { verifyLogin } from \"~/models/user.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n  return json({});\r\n};\r\n\r\ninterface ActionData {\r\n  errors?: {\r\n    email?: string;\r\n    password?: string;\r\n  };\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\");\r\n  const password = formData.get(\"password\");\r\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/dashboard\");\r\n  const remember = formData.get(\"remember\");\r\n\r\n  if (!validateEmail(email)) {\r\n    return json<ActionData>(\r\n      { errors: { email: \"Email is invalid\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof password !== \"string\") {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (password.length < 8) {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is too short\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const user = await verifyLogin(email, password);\r\n\r\n  if (!user) {\r\n    return json<ActionData>(\r\n      { errors: { email: \"Invalid email or password\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  return createUserSession({\r\n    request,\r\n    userId: user.id,\r\n    remember: remember === \"on\" ? true : false,\r\n    redirectTo,\r\n  });\r\n};\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return {\r\n    title: \"Login\",\r\n  };\r\n};\r\n\r\nexport default function LoginPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\r\n  const actionData = useActionData() as ActionData;\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n  const passwordRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (actionData?.errors?.email) {\r\n      emailRef.current?.focus();\r\n    } else if (actionData?.errors?.password) {\r\n      passwordRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-full flex-col justify-center\">\r\n      <div className=\"mx-auto w-full max-w-md px-8\">\r\n        <Form method=\"post\" className=\"space-y-6\">\r\n          <div>\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Email address\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                ref={emailRef}\r\n                id=\"email\"\r\n                required\r\n                autoFocus={true}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                aria-invalid={actionData?.errors?.email ? true : undefined}\r\n                aria-describedby=\"email-error\"\r\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.email && (\r\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\r\n                  {actionData.errors.email}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Password\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                id=\"password\"\r\n                ref={passwordRef}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                aria-invalid={actionData?.errors?.password ? true : undefined}\r\n                aria-describedby=\"password-error\"\r\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.password && (\r\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\r\n                  {actionData.errors.password}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\r\n          >\r\n            Log in\r\n          </button>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember\"\r\n                name=\"remember\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n              />\r\n              <label\r\n                htmlFor=\"remember\"\r\n                className=\"ml-2 block text-sm text-gray-900\"\r\n              >\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            <div className=\"text-center text-sm text-gray-500\">\r\n              Don't have an account?{\" \"}\r\n              <Link\r\n                className=\"text-blue-500 underline\"\r\n                to={{\r\n                  pathname: \"/join\",\r\n                  search: searchParams.toString(),\r\n                }}\r\n              >\r\n                Sign up\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "export default {'version':'598b9529','entry':{'module':'/build/entry.client-YMRU6V3Y.js','imports':['/build/_shared/chunk-SXNYENQH.js','/build/_shared/chunk-JXBXTGAH.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-UVYP7A7K.js','imports':['/build/_shared/chunk-MJHY2JV3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-77CO4BP3.js','imports':['/build/_shared/chunk-DPTF6WXW.js','/build/_shared/chunk-ME5PAYV3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'routes/dashboard','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-2ROJ23QH.js','imports':['/build/_shared/chunk-MJHY2JV3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-TOWXXLQV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-YY62H33H.js','imports':['/build/_shared/chunk-DPTF6WXW.js','/build/_shared/chunk-ME5PAYV3.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-598B9529.js'};", "\nimport * as entryServer from \"D:\\\\WebApp-Project\\\\remixionnaire\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"D:\\\\WebApp-Project\\\\remixionnaire\\\\app\\\\root.tsx\";\nimport * as route1 from \"D:\\\\WebApp-Project\\\\remixionnaire\\\\app\\\\routes\\\\dashboard.tsx\";\nimport * as route2 from \"D:\\\\WebApp-Project\\\\remixionnaire\\\\app\\\\routes\\\\dashboard\\\\index.tsx\";\nimport * as route3 from \"D:\\\\WebApp-Project\\\\remixionnaire\\\\app\\\\routes\\\\index.tsx\";\nimport * as route4 from \"D:\\\\WebApp-Project\\\\remixionnaire\\\\app\\\\routes\\\\login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"routes/dashboard\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
